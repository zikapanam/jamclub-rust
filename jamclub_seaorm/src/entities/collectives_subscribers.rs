//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "collectives_subscribers")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub collective_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub subscriber_id: i32,
    pub created_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::collectives::Entity",
        from = "Column::CollectiveId",
        to = "super::collectives::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Collectives,
    #[sea_orm(
        belongs_to = "super::members::Entity",
        from = "Column::SubscriberId",
        to = "super::members::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Members,
}

impl Related<super::collectives::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Collectives.def()
    }
}

impl Related<super::members::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Members.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
