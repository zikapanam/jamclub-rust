//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "community")]
pub enum Community {
    #[sea_orm(string_value = "interadv")]
    Interadv,
    #[sea_orm(string_value = "interbeg")]
    Interbeg,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "encounter_status")]
pub enum EncounterStatus {
    #[sea_orm(string_value = "Cancelled")]
    Cancelled,
    #[sea_orm(string_value = "ClosedRegistration")]
    ClosedRegistration,
    #[sea_orm(string_value = "OnDemandeRegistration")]
    OnDemandeRegistration,
    #[sea_orm(string_value = "OpenRegistration")]
    OpenRegistration,
    #[sea_orm(string_value = "Realised")]
    Realised,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "encounter_type")]
pub enum EncounterType {
    #[sea_orm(string_value = "Concert")]
    Concert,
    #[sea_orm(string_value = "DistantJam")]
    DistantJam,
    #[sea_orm(string_value = "EventJam")]
    EventJam,
    #[sea_orm(string_value = "Informal")]
    Informal,
    #[sea_orm(string_value = "Karaoke")]
    Karaoke,
    #[sea_orm(string_value = "OutJam")]
    OutJam,
    #[sea_orm(string_value = "RehearsalJam")]
    RehearsalJam,
    #[sea_orm(string_value = "StreetJam")]
    StreetJam,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "event_status")]
pub enum EventStatus {
    #[sea_orm(string_value = "Booked")]
    Booked,
    #[sea_orm(string_value = "BookedAndConfirmed")]
    BookedAndConfirmed,
    #[sea_orm(string_value = "Cancelled")]
    Cancelled,
    #[sea_orm(string_value = "Realised")]
    Realised,
    #[sea_orm(string_value = "ToBook")]
    ToBook,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "event_type")]
pub enum EventType {
    #[sea_orm(string_value = "Concert")]
    Concert,
    #[sea_orm(string_value = "JamSession")]
    JamSession,
    #[sea_orm(string_value = "OpenMic")]
    OpenMic,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "location_type")]
pub enum LocationType {
    #[sea_orm(string_value = "Cafe")]
    Cafe,
    #[sea_orm(string_value = "CafeConcert")]
    CafeConcert,
    #[sea_orm(string_value = "ConcertHall")]
    ConcertHall,
    #[sea_orm(string_value = "Karaoke")]
    Karaoke,
    #[sea_orm(string_value = "MeetingHall")]
    MeetingHall,
    #[sea_orm(string_value = "PrivateLocation")]
    PrivateLocation,
    #[sea_orm(string_value = "RehearsalStudio")]
    RehearsalStudio,
    #[sea_orm(string_value = "Restaurant")]
    Restaurant,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "music_genre")]
pub enum MusicGenre {
    #[sea_orm(string_value = "Afrobeat")]
    Afrobeat,
    #[sea_orm(string_value = "Blues")]
    Blues,
    #[sea_orm(string_value = "Brasilian")]
    Brasilian,
    #[sea_orm(string_value = "Chamber")]
    Chamber,
    #[sea_orm(string_value = "Country")]
    Country,
    #[sea_orm(string_value = "Disco")]
    Disco,
    #[sea_orm(string_value = "Folk")]
    Folk,
    #[sea_orm(string_value = "FrenchSong")]
    FrenchSong,
    #[sea_orm(string_value = "Funk")]
    Funk,
    #[sea_orm(string_value = "Fusion")]
    Fusion,
    #[sea_orm(string_value = "Grunge")]
    Grunge,
    #[sea_orm(string_value = "HardRock")]
    HardRock,
    #[sea_orm(string_value = "HipHop")]
    HipHop,
    #[sea_orm(string_value = "Instrumental")]
    Instrumental,
    #[sea_orm(string_value = "Jazz")]
    Jazz,
    #[sea_orm(string_value = "Latin")]
    Latin,
    #[sea_orm(string_value = "Metal")]
    Metal,
    #[sea_orm(string_value = "Pop")]
    Pop,
    #[sea_orm(string_value = "Punk")]
    Punk,
    #[sea_orm(string_value = "Reggae")]
    Reggae,
    #[sea_orm(string_value = "RnB")]
    RnB,
    #[sea_orm(string_value = "Rock")]
    Rock,
    #[sea_orm(string_value = "Soul")]
    Soul,
    #[sea_orm(string_value = "Trad")]
    Trad,
    #[sea_orm(string_value = "World")]
    World,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "participant_type")]
pub enum ParticipantType {
    #[sea_orm(string_value = "Available")]
    Available,
    #[sea_orm(string_value = "IfNeeded")]
    IfNeeded,
    #[sea_orm(string_value = "NotAvailable")]
    NotAvailable,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "played_instrument")]
pub enum PlayedInstrument {
    #[sea_orm(string_value = "Accordion")]
    Accordion,
    #[sea_orm(string_value = "All")]
    All,
    #[sea_orm(string_value = "Bass")]
    Bass,
    #[sea_orm(string_value = "CAM")]
    Cam,
    #[sea_orm(string_value = "Cajon")]
    Cajon,
    #[sea_orm(string_value = "Cello")]
    Cello,
    #[sea_orm(string_value = "Clarinet")]
    Clarinet,
    #[sea_orm(string_value = "DoubleBass")]
    DoubleBass,
    #[sea_orm(string_value = "DrumMachine")]
    DrumMachine,
    #[sea_orm(string_value = "Drums")]
    Drums,
    #[sea_orm(string_value = "Flute")]
    Flute,
    #[sea_orm(string_value = "Guitar")]
    Guitar,
    #[sea_orm(string_value = "Harmonica")]
    Harmonica,
    #[sea_orm(string_value = "Harp")]
    Harp,
    #[sea_orm(string_value = "Keyboard")]
    Keyboard,
    #[sea_orm(string_value = "OtherStringedInstruments")]
    OtherStringedInstruments,
    #[sea_orm(string_value = "OtherWoodwindInstruments")]
    OtherWoodwindInstruments,
    #[sea_orm(string_value = "Percussion")]
    Percussion,
    #[sea_orm(string_value = "Piano")]
    Piano,
    #[sea_orm(string_value = "Saxophone")]
    Saxophone,
    #[sea_orm(string_value = "Trombone")]
    Trombone,
    #[sea_orm(string_value = "Trumpet")]
    Trumpet,
    #[sea_orm(string_value = "Violin")]
    Violin,
    #[sea_orm(string_value = "Voice")]
    Voice,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "provenance")]
pub enum Provenance {
    #[sea_orm(string_value = "basetorius")]
    Basetorius,
    #[sea_orm(string_value = "easyzic")]
    Easyzic,
    #[sea_orm(string_value = "flyers")]
    Flyers,
    #[sea_orm(string_value = "other")]
    Other,
    #[sea_orm(string_value = "search_engine")]
    SearchEngine,
    #[sea_orm(string_value = "social_network")]
    SocialNetwork,
    #[sea_orm(string_value = "words_of_mouth")]
    WordsOfMouth,
    #[sea_orm(string_value = "youtube")]
    Youtube,
    #[sea_orm(string_value = "zikinf")]
    Zikinf,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "publication_status")]
pub enum PublicationStatus {
    #[sea_orm(string_value = "Archived")]
    Archived,
    #[sea_orm(string_value = "Confirmed")]
    Confirmed,
    #[sea_orm(string_value = "ToBeChecked")]
    ToBeChecked,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "volunteer_type")]
pub enum VolunteerType {
    #[sea_orm(string_value = "ComputerScience")]
    ComputerScience,
    #[sea_orm(string_value = "Designer")]
    Designer,
    #[sea_orm(string_value = "Illustrator")]
    Illustrator,
    #[sea_orm(string_value = "Photograph")]
    Photograph,
    #[sea_orm(string_value = "Videographer")]
    Videographer,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "zap_role")]
pub enum ZapRole {
    #[sea_orm(string_value = "leader")]
    Leader,
    #[sea_orm(string_value = "mbr_asso")]
    MbrAsso,
    #[sea_orm(string_value = "mbr_asso_actif")]
    MbrAssoActif,
    #[sea_orm(string_value = "mbr_asso_bienfaiteur")]
    MbrAssoBienfaiteur,
    #[sea_orm(string_value = "recensement_3")]
    Recensement3,
    #[sea_orm(string_value = "referent")]
    Referent,
}
